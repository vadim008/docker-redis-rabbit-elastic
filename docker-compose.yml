version: '3.3'

services:

  publisher:
    build:
      context: ./publisher
      dockerfile: Dockerfile
    depends_on:
        - rabbit
        - redis
    environment:
      - RABBIT=rabbit
      - REDIS=redis
      - FRIEND_EXCHANGE=friends-talk
    ports:
      - "5000:5000/tcp"
    restart: on-failure

  consumer:
    build:
      context: ./consumer
      dockerfile: Dockerfile
    depends_on:
        - rabbit
        - redis
        - publisher
    environment:
      - RABBIT=rabbit
      - REDIS=redis
    restart: on-failure


#  sparc:
#    build:
#      context: ./pysparc
#      dockerfile: Dockerfile
#      hostname: sparc
#      container_name: sparc

  master:
    build:
      context: ./pysparc
      dockerfile: Dockerfile

    command: bin/spark-class org.apache.spark.deploy.master.Master -h master
    hostname: master
    environment:
      MASTER: spark://master:7077
      SPARK_CONF_DIR: /conf
      SPARK_PUBLIC_DNS: localhost
      PYSPARK_DRIVER_PYTHON: jupiter
      PYSPARK_DRIVER_PYTHON_OPTS: notebook
    expose:
      - 7001
      - 7002
      - 7003
      - 7004
      - 7005
      - 7077
      - 6066
    ports:
      - 4040:4040
      - 6066:6066
      - 7077:7077
      - 8080:8080
    volumes:
      - ./conf/master:/conf
      - ./data:/tmp/data

  worker:
    build:
      context: ./pysparc
      dockerfile: Dockerfile

    command: bin/spark-class org.apache.spark.deploy.worker.Worker spark://master:7077
    hostname: worker
    environment:
      SPARK_CONF_DIR: /conf
      SPARK_WORKER_CORES: 2
      SPARK_WORKER_MEMORY: 1g
      SPARK_WORKER_PORT: 8881
      SPARK_WORKER_WEBUI_PORT: 8081
      SPARK_PUBLIC_DNS: localhost
    links:
      - master
    expose:
      - 7012
      - 7013
      - 7014
      - 7015
      - 8881
    ports:
      - 8081:8081
    volumes:
      - ./conf/worker:/conf
      - ./data:/tmp/data


  redis:
    image: redis:4.0.5-alpine
    command: ["redis-server", "--appendonly", "yes", "--requirepass", "ppp"]
    hostname: redis
    container_name: redis
    ports:
      - "6379:6379"
    expose:
      - "6379"
    volumes:
      - redis-data:/data

  rabbit:

    build:
      context: ./rabbit
      dockerfile: Dockerfile

    container_name: rabbitmq

    ports:
      - "4369:4369"
      - "5672:5672"
      - "15672:15672"
      - "15671:15671"
      - "25672:25672"
      - "35197:35197"
    expose:
      - "15672"
      - "15671"
    environment:
      - RABBITMQ_USE_LONGNAME=true
      - RABBITMQ_LOGS=/var/log/rabbitmq/rabbit.log
    volumes:
      - rabbit_data:/var/lib/rabbitmq
      - rabbit_logs:/var/log/rabbitmq
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:15672"]
        interval: 30s
        timeout: 10s
        retries: 5

volumes:
  redis-data:
  rabbit_data:
  rabbit_logs:

#docker-compose -f .\docker-compose.yml up